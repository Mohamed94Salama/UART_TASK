
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000974  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000052  00800060  00000974  00000a08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  008000b2  008000b2  00000a5a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001199  00000000  00000000  00000bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008d5  00000000  00000000  00001d59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014ca  00000000  00000000  0000262e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  00003af8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000572  00000000  00000000  00003c98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003df  00000000  00000000  0000420a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  000045e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__ctors_end>
   4:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   8:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  10:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  14:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  18:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  1c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  20:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  24:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  28:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  2c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  30:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  34:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  38:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  3c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  40:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  44:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  48:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  4c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  50:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  54:	2f 01       	movw	r4, r30
  56:	40 01       	movw	r8, r0
  58:	51 01       	movw	r10, r2
  5a:	62 01       	movw	r12, r4
  5c:	73 01       	movw	r14, r6
  5e:	84 01       	movw	r16, r8
  60:	95 01       	movw	r18, r10
  62:	a6 01       	movw	r20, r12
  64:	b7 01       	movw	r22, r14
  66:	c9 01       	movw	r24, r18
  68:	da 01       	movw	r26, r20
  6a:	eb 01       	movw	r28, r22
  6c:	fc 01       	movw	r30, r24
  6e:	0d 02       	muls	r16, r29
  70:	1e 02       	muls	r17, r30
  72:	2f 02       	muls	r18, r31
  74:	40 02       	muls	r20, r16
  76:	51 02       	muls	r21, r17
  78:	62 02       	muls	r22, r18
  7a:	73 02       	muls	r23, r19
  7c:	84 02       	muls	r24, r20
  7e:	95 02       	muls	r25, r21
  80:	a6 02       	muls	r26, r22
  82:	b7 02       	muls	r27, r23
  84:	bc 02       	muls	r27, r28
  86:	cd 02       	muls	r28, r29
  88:	de 02       	muls	r29, r30
  8a:	ef 02       	muls	r30, r31
  8c:	00 03       	mulsu	r16, r16
  8e:	11 03       	mulsu	r17, r17
  90:	22 03       	mulsu	r18, r18
  92:	33 03       	mulsu	r19, r19
  94:	61 03       	mulsu	r22, r17
  96:	67 03       	mulsu	r22, r23
  98:	6d 03       	fmul	r22, r21
  9a:	73 03       	mulsu	r23, r19
  9c:	79 03       	fmul	r23, r17
  9e:	7f 03       	fmul	r23, r23
  a0:	85 03       	fmuls	r16, r21
  a2:	8b 03       	fmulsu	r16, r19
  a4:	91 03       	fmuls	r17, r17
  a6:	97 03       	fmuls	r17, r23
  a8:	9d 03       	fmulsu	r17, r21
  aa:	a3 03       	fmuls	r18, r19
  ac:	a9 03       	fmulsu	r18, r17
  ae:	af 03       	fmulsu	r18, r23
  b0:	b5 03       	fmuls	r19, r21
  b2:	bb 03       	fmulsu	r19, r19
  b4:	c1 03       	fmuls	r20, r17
  b6:	c7 03       	fmuls	r20, r23
  b8:	cd 03       	fmulsu	r20, r21
  ba:	d3 03       	fmuls	r21, r19
  bc:	d9 03       	fmulsu	r21, r17
  be:	df 03       	fmulsu	r21, r23
  c0:	e5 03       	fmuls	r22, r21
  c2:	eb 03       	fmulsu	r22, r19
  c4:	f1 03       	fmuls	r23, r17
  c6:	f7 03       	fmuls	r23, r23
  c8:	fd 03       	fmulsu	r23, r21
  ca:	03 04       	cpc	r0, r3
  cc:	09 04       	cpc	r0, r9
  ce:	0f 04       	cpc	r0, r15
  d0:	15 04       	cpc	r1, r5
  d2:	1b 04       	cpc	r1, r11

000000d4 <__ctors_end>:
  d4:	11 24       	eor	r1, r1
  d6:	1f be       	out	0x3f, r1	; 63
  d8:	cf e5       	ldi	r28, 0x5F	; 95
  da:	d8 e0       	ldi	r29, 0x08	; 8
  dc:	de bf       	out	0x3e, r29	; 62
  de:	cd bf       	out	0x3d, r28	; 61

000000e0 <__do_copy_data>:
  e0:	10 e0       	ldi	r17, 0x00	; 0
  e2:	a0 e6       	ldi	r26, 0x60	; 96
  e4:	b0 e0       	ldi	r27, 0x00	; 0
  e6:	e4 e7       	ldi	r30, 0x74	; 116
  e8:	f9 e0       	ldi	r31, 0x09	; 9
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x10>
  ec:	05 90       	lpm	r0, Z+
  ee:	0d 92       	st	X+, r0
  f0:	a2 3b       	cpi	r26, 0xB2	; 178
  f2:	b1 07       	cpc	r27, r17
  f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0xc>

000000f6 <__do_clear_bss>:
  f6:	20 e0       	ldi	r18, 0x00	; 0
  f8:	a2 eb       	ldi	r26, 0xB2	; 178
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
  fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
 100:	a3 3b       	cpi	r26, 0xB3	; 179
 102:	b2 07       	cpc	r27, r18
 104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
 106:	0e 94 89 00 	call	0x112	; 0x112 <main>
 10a:	0c 94 b8 04 	jmp	0x970	; 0x970 <_exit>

0000010e <__bad_interrupt>:
 10e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000112 <main>:
#include "../ECUAL/LED_DRIVER/LED.h"
#include "../MCAL/DIO_DRIVER/DIO.h"
#include "../MCAL/UART_DRIVER/UART.h"
#include <string.h>
int main(void)
{
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
 11a:	e8 97       	sbiw	r28, 0x38	; 56
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
    LED_Init();
 126:	0e 94 0f 01 	call	0x21e	; 0x21e <LED_Init>
	UART_Init();
 12a:	0e 94 22 04 	call	0x844	; 0x844 <UART_Init>
	DIO_Init();
 12e:	0e 94 1d 01 	call	0x23a	; 0x23a <DIO_Init>
	uint8_t arr1[16]="Green LED is on\r";
 132:	80 e1       	ldi	r24, 0x10	; 16
 134:	e0 e6       	ldi	r30, 0x60	; 96
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	de 01       	movw	r26, r28
 13a:	11 96       	adiw	r26, 0x01	; 1
 13c:	01 90       	ld	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	8a 95       	dec	r24
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x2a>
	uint8_t arr2[17]="Yellow LED is on\r";
 144:	81 e1       	ldi	r24, 0x11	; 17
 146:	e1 e7       	ldi	r30, 0x71	; 113
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	de 01       	movw	r26, r28
 14c:	51 96       	adiw	r26, 0x11	; 17
 14e:	01 90       	ld	r0, Z+
 150:	0d 92       	st	X+, r0
 152:	8a 95       	dec	r24
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0x3c>
	uint8_t arr3[14]="Red LED is on\r";
 156:	8e e0       	ldi	r24, 0x0E	; 14
 158:	e3 e8       	ldi	r30, 0x83	; 131
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	de 01       	movw	r26, r28
 15e:	92 96       	adiw	r26, 0x22	; 34
 160:	01 90       	ld	r0, Z+
 162:	0d 92       	st	X+, r0
 164:	8a 95       	dec	r24
 166:	e1 f7       	brne	.-8      	; 0x160 <main+0x4e>
	uint8_t arr4[3]="OK\r";
 168:	8f e4       	ldi	r24, 0x4F	; 79
 16a:	9b e4       	ldi	r25, 0x4B	; 75
 16c:	99 ab       	std	Y+49, r25	; 0x31
 16e:	88 ab       	std	Y+48, r24	; 0x30
 170:	8d e0       	ldi	r24, 0x0D	; 13
 172:	8a ab       	std	Y+50, r24	; 0x32
	uint8_t c;

    while (1) 
    {
		
		UART_ReceiveString(x,MAX_LEN);
 174:	6f ef       	ldi	r22, 0xFF	; 255
 176:	ce 01       	movw	r24, r28
 178:	c3 96       	adiw	r24, 0x33	; 51
 17a:	0e 94 80 04 	call	0x900	; 0x900 <UART_ReceiveString>
		//UART_ReceiveData(&c);
		if(strcmp(x,"START\r")==0)
 17e:	62 e9       	ldi	r22, 0x92	; 146
 180:	70 e0       	ldi	r23, 0x00	; 0
 182:	ce 01       	movw	r24, r28
 184:	c3 96       	adiw	r24, 0x33	; 51
 186:	0e 94 af 04 	call	0x95e	; 0x95e <strcmp>
 18a:	89 2b       	or	r24, r25
 18c:	71 f4       	brne	.+28     	; 0x1aa <main+0x98>
		{
			LED_ON(LED_1);
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	0e 94 13 01 	call	0x226	; 0x226 <LED_ON>
			LED_OFF(LED_2);
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	0e 94 18 01 	call	0x230	; 0x230 <LED_OFF>
			LED_OFF(LED_3);
 19a:	82 e0       	ldi	r24, 0x02	; 2
 19c:	0e 94 18 01 	call	0x230	; 0x230 <LED_OFF>
			UART_SendString(arr1);
 1a0:	ce 01       	movw	r24, r28
 1a2:	01 96       	adiw	r24, 0x01	; 1
 1a4:	0e 94 59 04 	call	0x8b2	; 0x8b2 <UART_SendString>
 1a8:	e5 cf       	rjmp	.-54     	; 0x174 <main+0x62>
		}else if(strcmp(x,"WAIT\r")==0)
 1aa:	69 e9       	ldi	r22, 0x99	; 153
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	ce 01       	movw	r24, r28
 1b0:	c3 96       	adiw	r24, 0x33	; 51
 1b2:	0e 94 af 04 	call	0x95e	; 0x95e <strcmp>
 1b6:	89 2b       	or	r24, r25
 1b8:	71 f4       	brne	.+28     	; 0x1d6 <main+0xc4>
		{
			LED_OFF(LED_1);
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	0e 94 18 01 	call	0x230	; 0x230 <LED_OFF>
			LED_ON(LED_2);
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	0e 94 13 01 	call	0x226	; 0x226 <LED_ON>
			LED_OFF(LED_3);
 1c6:	82 e0       	ldi	r24, 0x02	; 2
 1c8:	0e 94 18 01 	call	0x230	; 0x230 <LED_OFF>
			UART_SendString(arr2);			
 1cc:	ce 01       	movw	r24, r28
 1ce:	41 96       	adiw	r24, 0x11	; 17
 1d0:	0e 94 59 04 	call	0x8b2	; 0x8b2 <UART_SendString>
 1d4:	cf cf       	rjmp	.-98     	; 0x174 <main+0x62>
		}else if(strcmp(x,"STOP\r")==0)
 1d6:	6f e9       	ldi	r22, 0x9F	; 159
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	ce 01       	movw	r24, r28
 1dc:	c3 96       	adiw	r24, 0x33	; 51
 1de:	0e 94 af 04 	call	0x95e	; 0x95e <strcmp>
 1e2:	89 2b       	or	r24, r25
 1e4:	71 f4       	brne	.+28     	; 0x202 <main+0xf0>
		{
			LED_OFF(LED_1);
 1e6:	80 e0       	ldi	r24, 0x00	; 0
 1e8:	0e 94 18 01 	call	0x230	; 0x230 <LED_OFF>
			LED_OFF(LED_2);
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	0e 94 18 01 	call	0x230	; 0x230 <LED_OFF>
			LED_ON(LED_3);			
 1f2:	82 e0       	ldi	r24, 0x02	; 2
 1f4:	0e 94 13 01 	call	0x226	; 0x226 <LED_ON>
			UART_SendString(arr3);			
 1f8:	ce 01       	movw	r24, r28
 1fa:	82 96       	adiw	r24, 0x22	; 34
 1fc:	0e 94 59 04 	call	0x8b2	; 0x8b2 <UART_SendString>
 200:	b9 cf       	rjmp	.-142    	; 0x174 <main+0x62>
		}else if(strcmp(x,"AT\r")==0)
 202:	65 ea       	ldi	r22, 0xA5	; 165
 204:	70 e0       	ldi	r23, 0x00	; 0
 206:	ce 01       	movw	r24, r28
 208:	c3 96       	adiw	r24, 0x33	; 51
 20a:	0e 94 af 04 	call	0x95e	; 0x95e <strcmp>
 20e:	89 2b       	or	r24, r25
 210:	09 f0       	breq	.+2      	; 0x214 <main+0x102>
 212:	b0 cf       	rjmp	.-160    	; 0x174 <main+0x62>
		{
			UART_SendString(arr4);
 214:	ce 01       	movw	r24, r28
 216:	c0 96       	adiw	r24, 0x30	; 48
 218:	0e 94 59 04 	call	0x8b2	; 0x8b2 <UART_SendString>
 21c:	ab cf       	rjmp	.-170    	; 0x174 <main+0x62>

0000021e <LED_Init>:

#include "LED.h"

enuErrorStatus_t	LED_Init(void)
{
	DIO_Init();
 21e:	0e 94 1d 01 	call	0x23a	; 0x23a <DIO_Init>
	return E_OK;
}
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	08 95       	ret

00000226 <LED_ON>:

enuErrorStatus_t	LED_ON(uint8_t u8LedNum)
{
	DIO_Write(u8LedNum,HIGH);
 226:	61 e0       	ldi	r22, 0x01	; 1
 228:	0e 94 4c 03 	call	0x698	; 0x698 <DIO_Write>
	return E_OK;
}
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	08 95       	ret

00000230 <LED_OFF>:

enuErrorStatus_t	LED_OFF(uint8_t u8LedNum)
{
	DIO_Write(u8LedNum,LOW);
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	0e 94 4c 03 	call	0x698	; 0x698 <DIO_Write>
	return E_OK;	
}
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	08 95       	ret

0000023a <DIO_Init>:
#include "../../library/BIT_MANIPULATE.h"
#include "../../library/Register.h"


enuErrorStatus_t DIO_Init(void)
{
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	c9 ea       	ldi	r28, 0xA9	; 169
 240:	d0 e0       	ldi	r29, 0x00	; 0
 242:	42 eb       	ldi	r20, 0xB2	; 178
 244:	50 e0       	ldi	r21, 0x00	; 0
	uint8_t i;
	for(i=0;i<DIO_GROUPS_NO;i++)
	{
		switch(astrDIOConfigParameters[i].enuPinNo)
 246:	e8 81       	ld	r30, Y
 248:	8e 2f       	mov	r24, r30
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	80 32       	cpi	r24, 0x20	; 32
 24e:	91 05       	cpc	r25, r1
 250:	08 f0       	brcs	.+2      	; 0x254 <DIO_Init+0x1a>
 252:	19 c2       	rjmp	.+1074   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 254:	fc 01       	movw	r30, r24
 256:	e6 5d       	subi	r30, 0xD6	; 214
 258:	ff 4f       	sbci	r31, 0xFF	; 255
 25a:	0c 94 a9 04 	jmp	0x952	; 0x952 <__tablejump2__>
		{
			case PA0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 25e:	89 81       	ldd	r24, Y+1	; 0x01
 260:	81 30       	cpi	r24, 0x01	; 1
 262:	11 f4       	brne	.+4      	; 0x268 <DIO_Init+0x2e>
				{
					SET_BIT(DDRA_R,PA0);
 264:	d0 9a       	sbi	0x1a, 0	; 26
 266:	0f c2       	rjmp	.+1054   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 268:	81 11       	cpse	r24, r1
 26a:	0d c2       	rjmp	.+1050   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 26c:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA0);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 26e:	81 30       	cpi	r24, 0x01	; 1
 270:	19 f4       	brne	.+6      	; 0x278 <DIO_Init+0x3e>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA0);
 272:	d0 98       	cbi	0x1a, 0	; 26
					SET_BIT(PORTA_R,PA0);
 274:	d8 9a       	sbi	0x1b, 0	; 27
 276:	07 c2       	rjmp	.+1038   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 278:	81 11       	cpse	r24, r1
 27a:	05 c2       	rjmp	.+1034   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA0);
 27c:	d0 98       	cbi	0x1a, 0	; 26
 27e:	03 c2       	rjmp	.+1030   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PA1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 280:	89 81       	ldd	r24, Y+1	; 0x01
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	11 f4       	brne	.+4      	; 0x28a <DIO_Init+0x50>
				{
					SET_BIT(DDRA_R,PA1);
 286:	d1 9a       	sbi	0x1a, 1	; 26
 288:	fe c1       	rjmp	.+1020   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 28a:	81 11       	cpse	r24, r1
 28c:	fc c1       	rjmp	.+1016   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 28e:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA1);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	19 f4       	brne	.+6      	; 0x29a <DIO_Init+0x60>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA1);
 294:	d1 98       	cbi	0x1a, 1	; 26
					SET_BIT(PORTA_R,PA1);
 296:	d9 9a       	sbi	0x1b, 1	; 27
 298:	f6 c1       	rjmp	.+1004   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 29a:	81 11       	cpse	r24, r1
 29c:	f4 c1       	rjmp	.+1000   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA1);
 29e:	d1 98       	cbi	0x1a, 1	; 26
 2a0:	f2 c1       	rjmp	.+996    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PA2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 2a2:	89 81       	ldd	r24, Y+1	; 0x01
 2a4:	81 30       	cpi	r24, 0x01	; 1
 2a6:	11 f4       	brne	.+4      	; 0x2ac <DIO_Init+0x72>
				{
					SET_BIT(DDRA_R,PA2);
 2a8:	d2 9a       	sbi	0x1a, 2	; 26
 2aa:	ed c1       	rjmp	.+986    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2ac:	81 11       	cpse	r24, r1
 2ae:	eb c1       	rjmp	.+982    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 2b0:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA2);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	19 f4       	brne	.+6      	; 0x2bc <DIO_Init+0x82>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA2);
 2b6:	d2 98       	cbi	0x1a, 2	; 26
					SET_BIT(PORTA_R,PA2);
 2b8:	da 9a       	sbi	0x1b, 2	; 27
 2ba:	e5 c1       	rjmp	.+970    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2bc:	81 11       	cpse	r24, r1
 2be:	e3 c1       	rjmp	.+966    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA2);
 2c0:	d2 98       	cbi	0x1a, 2	; 26
 2c2:	e1 c1       	rjmp	.+962    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PA3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 2c4:	89 81       	ldd	r24, Y+1	; 0x01
 2c6:	81 30       	cpi	r24, 0x01	; 1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <DIO_Init+0x94>
				{
					SET_BIT(DDRA_R,PA3);
 2ca:	d3 9a       	sbi	0x1a, 3	; 26
 2cc:	dc c1       	rjmp	.+952    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2ce:	81 11       	cpse	r24, r1
 2d0:	da c1       	rjmp	.+948    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 2d2:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA3);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2d4:	81 30       	cpi	r24, 0x01	; 1
 2d6:	19 f4       	brne	.+6      	; 0x2de <DIO_Init+0xa4>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA3);
 2d8:	d3 98       	cbi	0x1a, 3	; 26
					SET_BIT(PORTA_R,PA3);
 2da:	db 9a       	sbi	0x1b, 3	; 27
 2dc:	d4 c1       	rjmp	.+936    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2de:	81 11       	cpse	r24, r1
 2e0:	d2 c1       	rjmp	.+932    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA3);
 2e2:	d3 98       	cbi	0x1a, 3	; 26
 2e4:	d0 c1       	rjmp	.+928    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PA4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 2e6:	89 81       	ldd	r24, Y+1	; 0x01
 2e8:	81 30       	cpi	r24, 0x01	; 1
 2ea:	11 f4       	brne	.+4      	; 0x2f0 <DIO_Init+0xb6>
				{
					SET_BIT(DDRA_R,PA4);
 2ec:	d4 9a       	sbi	0x1a, 4	; 26
 2ee:	cb c1       	rjmp	.+918    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2f0:	81 11       	cpse	r24, r1
 2f2:	c9 c1       	rjmp	.+914    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 2f4:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA4);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 2f6:	81 30       	cpi	r24, 0x01	; 1
 2f8:	19 f4       	brne	.+6      	; 0x300 <DIO_Init+0xc6>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA4);
 2fa:	d4 98       	cbi	0x1a, 4	; 26
					SET_BIT(PORTA_R,PA4);
 2fc:	dc 9a       	sbi	0x1b, 4	; 27
 2fe:	c3 c1       	rjmp	.+902    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 300:	81 11       	cpse	r24, r1
 302:	c1 c1       	rjmp	.+898    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA4);
 304:	d4 98       	cbi	0x1a, 4	; 26
 306:	bf c1       	rjmp	.+894    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PA5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 308:	89 81       	ldd	r24, Y+1	; 0x01
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	11 f4       	brne	.+4      	; 0x312 <DIO_Init+0xd8>
				{
					SET_BIT(DDRA_R,PA5);
 30e:	d5 9a       	sbi	0x1a, 5	; 26
 310:	ba c1       	rjmp	.+884    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 312:	81 11       	cpse	r24, r1
 314:	b8 c1       	rjmp	.+880    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 316:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA5);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 318:	81 30       	cpi	r24, 0x01	; 1
 31a:	19 f4       	brne	.+6      	; 0x322 <DIO_Init+0xe8>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA5);
 31c:	d5 98       	cbi	0x1a, 5	; 26
					SET_BIT(PORTA_R,PA5);
 31e:	dd 9a       	sbi	0x1b, 5	; 27
 320:	b2 c1       	rjmp	.+868    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 322:	81 11       	cpse	r24, r1
 324:	b0 c1       	rjmp	.+864    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA5);
 326:	d5 98       	cbi	0x1a, 5	; 26
 328:	ae c1       	rjmp	.+860    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PA6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 32a:	89 81       	ldd	r24, Y+1	; 0x01
 32c:	81 30       	cpi	r24, 0x01	; 1
 32e:	11 f4       	brne	.+4      	; 0x334 <DIO_Init+0xfa>
				{
					SET_BIT(DDRA_R,PA6);
 330:	d6 9a       	sbi	0x1a, 6	; 26
 332:	a9 c1       	rjmp	.+850    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 334:	81 11       	cpse	r24, r1
 336:	a7 c1       	rjmp	.+846    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 338:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA6);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 33a:	81 30       	cpi	r24, 0x01	; 1
 33c:	19 f4       	brne	.+6      	; 0x344 <DIO_Init+0x10a>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA6);
 33e:	d6 98       	cbi	0x1a, 6	; 26
					SET_BIT(PORTA_R,PA6);
 340:	de 9a       	sbi	0x1b, 6	; 27
 342:	a1 c1       	rjmp	.+834    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 344:	81 11       	cpse	r24, r1
 346:	9f c1       	rjmp	.+830    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA6);
 348:	d6 98       	cbi	0x1a, 6	; 26
 34a:	9d c1       	rjmp	.+826    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PA7:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 34c:	89 81       	ldd	r24, Y+1	; 0x01
 34e:	81 30       	cpi	r24, 0x01	; 1
 350:	11 f4       	brne	.+4      	; 0x356 <DIO_Init+0x11c>
				{
					SET_BIT(DDRA_R,PA7);
 352:	d7 9a       	sbi	0x1a, 7	; 26
 354:	98 c1       	rjmp	.+816    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 356:	81 11       	cpse	r24, r1
 358:	96 c1       	rjmp	.+812    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 35a:	8a 81       	ldd	r24, Y+2	; 0x02
			case PA7:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRA_R,PA7);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 35c:	81 30       	cpi	r24, 0x01	; 1
 35e:	19 f4       	brne	.+6      	; 0x366 <DIO_Init+0x12c>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRA_R,PA7);
 360:	d7 98       	cbi	0x1a, 7	; 26
					SET_BIT(PORTA_R,PA7);
 362:	df 9a       	sbi	0x1b, 7	; 27
 364:	90 c1       	rjmp	.+800    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 366:	81 11       	cpse	r24, r1
 368:	8e c1       	rjmp	.+796    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRA_R,PA7);
 36a:	d7 98       	cbi	0x1a, 7	; 26
 36c:	8c c1       	rjmp	.+792    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				break;
			}
			
			case PB0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 36e:	89 81       	ldd	r24, Y+1	; 0x01
 370:	81 30       	cpi	r24, 0x01	; 1
 372:	19 f4       	brne	.+6      	; 0x37a <DIO_Init+0x140>
				{
					SET_BIT(DDRB_R,PB0);
 374:	87 b3       	in	r24, 0x17	; 23
 376:	87 bb       	out	0x17, r24	; 23
 378:	86 c1       	rjmp	.+780    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 37a:	81 11       	cpse	r24, r1
 37c:	84 c1       	rjmp	.+776    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 37e:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,PB0);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 380:	81 30       	cpi	r24, 0x01	; 1
 382:	19 f4       	brne	.+6      	; 0x38a <DIO_Init+0x150>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,0);
 384:	b8 98       	cbi	0x17, 0	; 23
					SET_BIT(PORTB_R,0);
 386:	c0 9a       	sbi	0x18, 0	; 24
 388:	7e c1       	rjmp	.+764    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 38a:	81 11       	cpse	r24, r1
 38c:	7c c1       	rjmp	.+760    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,0);
 38e:	b8 98       	cbi	0x17, 0	; 23
 390:	7a c1       	rjmp	.+756    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PB1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 392:	89 81       	ldd	r24, Y+1	; 0x01
 394:	81 30       	cpi	r24, 0x01	; 1
 396:	11 f4       	brne	.+4      	; 0x39c <DIO_Init+0x162>
				{
					SET_BIT(DDRB_R,1);
 398:	b9 9a       	sbi	0x17, 1	; 23
 39a:	75 c1       	rjmp	.+746    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 39c:	81 11       	cpse	r24, r1
 39e:	73 c1       	rjmp	.+742    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 3a0:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,1);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3a2:	81 30       	cpi	r24, 0x01	; 1
 3a4:	19 f4       	brne	.+6      	; 0x3ac <DIO_Init+0x172>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,1);
 3a6:	b9 98       	cbi	0x17, 1	; 23
					SET_BIT(PORTB_R,1);
 3a8:	c1 9a       	sbi	0x18, 1	; 24
 3aa:	6d c1       	rjmp	.+730    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3ac:	81 11       	cpse	r24, r1
 3ae:	6b c1       	rjmp	.+726    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,1);
 3b0:	b9 98       	cbi	0x17, 1	; 23
 3b2:	69 c1       	rjmp	.+722    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PB2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 3b4:	89 81       	ldd	r24, Y+1	; 0x01
 3b6:	81 30       	cpi	r24, 0x01	; 1
 3b8:	11 f4       	brne	.+4      	; 0x3be <DIO_Init+0x184>
				{
					SET_BIT(DDRB_R,2);
 3ba:	ba 9a       	sbi	0x17, 2	; 23
 3bc:	64 c1       	rjmp	.+712    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3be:	81 11       	cpse	r24, r1
 3c0:	62 c1       	rjmp	.+708    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 3c2:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,2);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3c4:	81 30       	cpi	r24, 0x01	; 1
 3c6:	19 f4       	brne	.+6      	; 0x3ce <DIO_Init+0x194>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,2);
 3c8:	ba 98       	cbi	0x17, 2	; 23
					SET_BIT(PORTB_R,2);
 3ca:	c2 9a       	sbi	0x18, 2	; 24
 3cc:	5c c1       	rjmp	.+696    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3ce:	81 11       	cpse	r24, r1
 3d0:	5a c1       	rjmp	.+692    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,2);
 3d2:	ba 98       	cbi	0x17, 2	; 23
 3d4:	58 c1       	rjmp	.+688    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PB3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 3d6:	89 81       	ldd	r24, Y+1	; 0x01
 3d8:	81 30       	cpi	r24, 0x01	; 1
 3da:	11 f4       	brne	.+4      	; 0x3e0 <DIO_Init+0x1a6>
				{
					SET_BIT(DDRB_R,3);
 3dc:	bb 9a       	sbi	0x17, 3	; 23
 3de:	53 c1       	rjmp	.+678    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3e0:	81 11       	cpse	r24, r1
 3e2:	51 c1       	rjmp	.+674    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 3e4:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,3);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3e6:	81 30       	cpi	r24, 0x01	; 1
 3e8:	19 f4       	brne	.+6      	; 0x3f0 <DIO_Init+0x1b6>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,3);
 3ea:	bb 98       	cbi	0x17, 3	; 23
					SET_BIT(PORTB_R,3);
 3ec:	c3 9a       	sbi	0x18, 3	; 24
 3ee:	4b c1       	rjmp	.+662    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 3f0:	81 11       	cpse	r24, r1
 3f2:	49 c1       	rjmp	.+658    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,3);
 3f4:	bb 98       	cbi	0x17, 3	; 23
 3f6:	47 c1       	rjmp	.+654    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PB4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 3f8:	89 81       	ldd	r24, Y+1	; 0x01
 3fa:	81 30       	cpi	r24, 0x01	; 1
 3fc:	11 f4       	brne	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
				{
					SET_BIT(DDRB_R,4);
 3fe:	bc 9a       	sbi	0x17, 4	; 23
 400:	42 c1       	rjmp	.+644    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 402:	81 11       	cpse	r24, r1
 404:	40 c1       	rjmp	.+640    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 406:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,4);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 408:	81 30       	cpi	r24, 0x01	; 1
 40a:	19 f4       	brne	.+6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,4);
 40c:	bc 98       	cbi	0x17, 4	; 23
					SET_BIT(PORTB_R,4);
 40e:	c4 9a       	sbi	0x18, 4	; 24
 410:	3a c1       	rjmp	.+628    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 412:	81 11       	cpse	r24, r1
 414:	38 c1       	rjmp	.+624    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,4);
 416:	bc 98       	cbi	0x17, 4	; 23
 418:	36 c1       	rjmp	.+620    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PB5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 41a:	89 81       	ldd	r24, Y+1	; 0x01
 41c:	81 30       	cpi	r24, 0x01	; 1
 41e:	11 f4       	brne	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
				{
					SET_BIT(DDRB_R,5);
 420:	bd 9a       	sbi	0x17, 5	; 23
 422:	31 c1       	rjmp	.+610    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 424:	81 11       	cpse	r24, r1
 426:	2f c1       	rjmp	.+606    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 428:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,5);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 42a:	81 30       	cpi	r24, 0x01	; 1
 42c:	19 f4       	brne	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,5);
 42e:	bd 98       	cbi	0x17, 5	; 23
					SET_BIT(PORTB_R,5);
 430:	c5 9a       	sbi	0x18, 5	; 24
 432:	29 c1       	rjmp	.+594    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 434:	81 11       	cpse	r24, r1
 436:	27 c1       	rjmp	.+590    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,5);
 438:	bd 98       	cbi	0x17, 5	; 23
 43a:	25 c1       	rjmp	.+586    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PB6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 43c:	89 81       	ldd	r24, Y+1	; 0x01
 43e:	81 30       	cpi	r24, 0x01	; 1
 440:	11 f4       	brne	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
				{
					SET_BIT(DDRB_R,6);
 442:	be 9a       	sbi	0x17, 6	; 23
 444:	20 c1       	rjmp	.+576    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 446:	81 11       	cpse	r24, r1
 448:	1e c1       	rjmp	.+572    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 44a:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,6);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 44c:	81 30       	cpi	r24, 0x01	; 1
 44e:	19 f4       	brne	.+6      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,6);
 450:	be 98       	cbi	0x17, 6	; 23
					SET_BIT(PORTB_R,6);
 452:	c6 9a       	sbi	0x18, 6	; 24
 454:	18 c1       	rjmp	.+560    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 456:	81 11       	cpse	r24, r1
 458:	16 c1       	rjmp	.+556    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,6);
 45a:	be 98       	cbi	0x17, 6	; 23
 45c:	14 c1       	rjmp	.+552    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PB7:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 45e:	89 81       	ldd	r24, Y+1	; 0x01
 460:	81 30       	cpi	r24, 0x01	; 1
 462:	11 f4       	brne	.+4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
				{
					SET_BIT(DDRB_R,7);
 464:	bf 9a       	sbi	0x17, 7	; 23
 466:	0f c1       	rjmp	.+542    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 468:	81 11       	cpse	r24, r1
 46a:	0d c1       	rjmp	.+538    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 46c:	8a 81       	ldd	r24, Y+2	; 0x02
			case PB7:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRB_R,7);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 46e:	81 30       	cpi	r24, 0x01	; 1
 470:	19 f4       	brne	.+6      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRB_R,7);
 472:	bf 98       	cbi	0x17, 7	; 23
					SET_BIT(PORTB_R,7);
 474:	c7 9a       	sbi	0x18, 7	; 24
 476:	07 c1       	rjmp	.+526    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 478:	81 11       	cpse	r24, r1
 47a:	05 c1       	rjmp	.+522    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRB_R,7);
 47c:	bf 98       	cbi	0x17, 7	; 23
 47e:	03 c1       	rjmp	.+518    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 480:	89 81       	ldd	r24, Y+1	; 0x01
 482:	81 30       	cpi	r24, 0x01	; 1
 484:	11 f4       	brne	.+4      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
				{
					SET_BIT(DDRC_R,0);
 486:	a0 9a       	sbi	0x14, 0	; 20
 488:	fe c0       	rjmp	.+508    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 48a:	81 11       	cpse	r24, r1
 48c:	fc c0       	rjmp	.+504    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 48e:	8a 81       	ldd	r24, Y+2	; 0x02
			case PC0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRC_R,0);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 490:	81 30       	cpi	r24, 0x01	; 1
 492:	19 f4       	brne	.+6      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRC_R,0);
 494:	a0 98       	cbi	0x14, 0	; 20
					SET_BIT(PORTC_R,0);
 496:	a8 9a       	sbi	0x15, 0	; 21
 498:	f6 c0       	rjmp	.+492    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 49a:	81 11       	cpse	r24, r1
 49c:	f4 c0       	rjmp	.+488    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRC_R,0);
 49e:	a0 98       	cbi	0x14, 0	; 20
 4a0:	f2 c0       	rjmp	.+484    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 4a2:	89 81       	ldd	r24, Y+1	; 0x01
 4a4:	81 30       	cpi	r24, 0x01	; 1
 4a6:	11 f4       	brne	.+4      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
				{
					SET_BIT(DDRC_R,1);
 4a8:	a1 9a       	sbi	0x14, 1	; 20
 4aa:	ed c0       	rjmp	.+474    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4ac:	81 11       	cpse	r24, r1
 4ae:	eb c0       	rjmp	.+470    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 4b0:	8a 81       	ldd	r24, Y+2	; 0x02
			case PC1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRC_R,1);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4b2:	81 30       	cpi	r24, 0x01	; 1
 4b4:	19 f4       	brne	.+6      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRC_R,1);
 4b6:	a1 98       	cbi	0x14, 1	; 20
					SET_BIT(PORTC_R,1);
 4b8:	a9 9a       	sbi	0x15, 1	; 21
 4ba:	e5 c0       	rjmp	.+458    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4bc:	81 11       	cpse	r24, r1
 4be:	e3 c0       	rjmp	.+454    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRC_R,1);
 4c0:	a1 98       	cbi	0x14, 1	; 20
 4c2:	e1 c0       	rjmp	.+450    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 4c4:	89 81       	ldd	r24, Y+1	; 0x01
 4c6:	81 30       	cpi	r24, 0x01	; 1
 4c8:	11 f4       	brne	.+4      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
				{
					SET_BIT(DDRC_R,2);
 4ca:	a2 9a       	sbi	0x14, 2	; 20
 4cc:	dc c0       	rjmp	.+440    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4ce:	81 11       	cpse	r24, r1
 4d0:	da c0       	rjmp	.+436    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 4d2:	8a 81       	ldd	r24, Y+2	; 0x02
			case PC2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRC_R,2);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4d4:	81 30       	cpi	r24, 0x01	; 1
 4d6:	19 f4       	brne	.+6      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRC_R,2);
 4d8:	a2 98       	cbi	0x14, 2	; 20
					SET_BIT(PORTC_R,2);
 4da:	aa 9a       	sbi	0x15, 2	; 21
 4dc:	d4 c0       	rjmp	.+424    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4de:	81 11       	cpse	r24, r1
 4e0:	d2 c0       	rjmp	.+420    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRC_R,2);
 4e2:	a2 98       	cbi	0x14, 2	; 20
 4e4:	d0 c0       	rjmp	.+416    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 4e6:	89 81       	ldd	r24, Y+1	; 0x01
 4e8:	81 30       	cpi	r24, 0x01	; 1
 4ea:	11 f4       	brne	.+4      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
				{
					SET_BIT(DDRC_R,3);
 4ec:	a3 9a       	sbi	0x14, 3	; 20
 4ee:	cb c0       	rjmp	.+406    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4f0:	81 11       	cpse	r24, r1
 4f2:	c9 c0       	rjmp	.+402    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 4f4:	8a 81       	ldd	r24, Y+2	; 0x02
			case PC3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRC_R,3);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 4f6:	81 30       	cpi	r24, 0x01	; 1
 4f8:	19 f4       	brne	.+6      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRC_R,3);
 4fa:	a3 98       	cbi	0x14, 3	; 20
					SET_BIT(PORTC_R,3);
 4fc:	ab 9a       	sbi	0x15, 3	; 21
 4fe:	c3 c0       	rjmp	.+390    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 500:	81 11       	cpse	r24, r1
 502:	c1 c0       	rjmp	.+386    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRC_R,3);
 504:	a3 98       	cbi	0x14, 3	; 20
 506:	bf c0       	rjmp	.+382    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 508:	89 81       	ldd	r24, Y+1	; 0x01
 50a:	81 30       	cpi	r24, 0x01	; 1
 50c:	11 f4       	brne	.+4      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
				{
					SET_BIT(DDRC_R,4);
 50e:	a4 9a       	sbi	0x14, 4	; 20
 510:	ba c0       	rjmp	.+372    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 512:	81 11       	cpse	r24, r1
 514:	b8 c0       	rjmp	.+368    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 516:	8a 81       	ldd	r24, Y+2	; 0x02
			case PC4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRC_R,4);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 518:	81 30       	cpi	r24, 0x01	; 1
 51a:	19 f4       	brne	.+6      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRC_R,4);
 51c:	a4 98       	cbi	0x14, 4	; 20
					SET_BIT(PORTC_R,4);
 51e:	ac 9a       	sbi	0x15, 4	; 21
 520:	b2 c0       	rjmp	.+356    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 522:	81 11       	cpse	r24, r1
 524:	b0 c0       	rjmp	.+352    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRC_R,4);
 526:	a4 98       	cbi	0x14, 4	; 20
 528:	ae c0       	rjmp	.+348    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 52a:	89 81       	ldd	r24, Y+1	; 0x01
 52c:	81 30       	cpi	r24, 0x01	; 1
 52e:	11 f4       	brne	.+4      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
				{
					SET_BIT(DDRC_R,5);
 530:	a5 9a       	sbi	0x14, 5	; 20
 532:	a9 c0       	rjmp	.+338    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 534:	81 11       	cpse	r24, r1
 536:	a7 c0       	rjmp	.+334    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 538:	8a 81       	ldd	r24, Y+2	; 0x02
			case PC5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRC_R,5);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 53a:	81 30       	cpi	r24, 0x01	; 1
 53c:	19 f4       	brne	.+6      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRC_R,5);
 53e:	a5 98       	cbi	0x14, 5	; 20
					SET_BIT(PORTC_R,5);
 540:	ad 9a       	sbi	0x15, 5	; 21
 542:	a1 c0       	rjmp	.+322    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 544:	81 11       	cpse	r24, r1
 546:	9f c0       	rjmp	.+318    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRC_R,5);
 548:	a5 98       	cbi	0x14, 5	; 20
 54a:	9d c0       	rjmp	.+314    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 54c:	89 81       	ldd	r24, Y+1	; 0x01
 54e:	81 30       	cpi	r24, 0x01	; 1
 550:	11 f4       	brne	.+4      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
				{
					SET_BIT(DDRC_R,6);
 552:	a6 9a       	sbi	0x14, 6	; 20
 554:	98 c0       	rjmp	.+304    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 556:	81 11       	cpse	r24, r1
 558:	96 c0       	rjmp	.+300    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 55a:	8a 81       	ldd	r24, Y+2	; 0x02
			case PC6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRC_R,6);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 55c:	81 30       	cpi	r24, 0x01	; 1
 55e:	19 f4       	brne	.+6      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRC_R,6);
 560:	a6 98       	cbi	0x14, 6	; 20
					SET_BIT(PORTC_R,6);
 562:	ae 9a       	sbi	0x15, 6	; 21
 564:	90 c0       	rjmp	.+288    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 566:	81 11       	cpse	r24, r1
 568:	8e c0       	rjmp	.+284    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRC_R,6);
 56a:	a6 98       	cbi	0x14, 6	; 20
 56c:	8c c0       	rjmp	.+280    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PC7:
			{
				if(astrDIOConfigParameters[i].enuPinDir==INPUT)
 56e:	89 81       	ldd	r24, Y+1	; 0x01
 570:	81 11       	cpse	r24, r1
 572:	89 c0       	rjmp	.+274    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				{
					SET_BIT(DDRC_R,7);
 574:	a7 9a       	sbi	0x14, 7	; 20
 576:	87 c0       	rjmp	.+270    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 578:	89 81       	ldd	r24, Y+1	; 0x01
 57a:	81 30       	cpi	r24, 0x01	; 1
 57c:	11 f4       	brne	.+4      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
				{
					SET_BIT(DDRD_R,0);
 57e:	88 9a       	sbi	0x11, 0	; 17
 580:	82 c0       	rjmp	.+260    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 582:	81 11       	cpse	r24, r1
 584:	80 c0       	rjmp	.+256    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 586:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD0:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,0);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 588:	81 30       	cpi	r24, 0x01	; 1
 58a:	19 f4       	brne	.+6      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,0);
 58c:	88 98       	cbi	0x11, 0	; 17
					SET_BIT(PORTD_R,0);
 58e:	90 9a       	sbi	0x12, 0	; 18
 590:	7a c0       	rjmp	.+244    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 592:	81 11       	cpse	r24, r1
 594:	78 c0       	rjmp	.+240    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,0);
 596:	88 98       	cbi	0x11, 0	; 17
 598:	76 c0       	rjmp	.+236    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 59a:	89 81       	ldd	r24, Y+1	; 0x01
 59c:	81 30       	cpi	r24, 0x01	; 1
 59e:	11 f4       	brne	.+4      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				{
					SET_BIT(DDRD_R,1);
 5a0:	89 9a       	sbi	0x11, 1	; 17
 5a2:	71 c0       	rjmp	.+226    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5a4:	81 11       	cpse	r24, r1
 5a6:	6f c0       	rjmp	.+222    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 5a8:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD1:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,1);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5aa:	81 30       	cpi	r24, 0x01	; 1
 5ac:	19 f4       	brne	.+6      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,1);
 5ae:	89 98       	cbi	0x11, 1	; 17
					SET_BIT(PORTD_R,1);
 5b0:	91 9a       	sbi	0x12, 1	; 18
 5b2:	69 c0       	rjmp	.+210    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5b4:	81 11       	cpse	r24, r1
 5b6:	67 c0       	rjmp	.+206    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,1);
 5b8:	89 98       	cbi	0x11, 1	; 17
 5ba:	65 c0       	rjmp	.+202    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 5bc:	89 81       	ldd	r24, Y+1	; 0x01
 5be:	81 30       	cpi	r24, 0x01	; 1
 5c0:	11 f4       	brne	.+4      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
				{
					SET_BIT(DDRD_R,2);
 5c2:	8a 9a       	sbi	0x11, 2	; 17
 5c4:	60 c0       	rjmp	.+192    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5c6:	81 11       	cpse	r24, r1
 5c8:	5e c0       	rjmp	.+188    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 5ca:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD2:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,2);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5cc:	81 30       	cpi	r24, 0x01	; 1
 5ce:	19 f4       	brne	.+6      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,2);
 5d0:	8a 98       	cbi	0x11, 2	; 17
					SET_BIT(PORTD_R,2);
 5d2:	92 9a       	sbi	0x12, 2	; 18
 5d4:	58 c0       	rjmp	.+176    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5d6:	81 11       	cpse	r24, r1
 5d8:	56 c0       	rjmp	.+172    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,2);
 5da:	8a 98       	cbi	0x11, 2	; 17
 5dc:	54 c0       	rjmp	.+168    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 5de:	89 81       	ldd	r24, Y+1	; 0x01
 5e0:	81 30       	cpi	r24, 0x01	; 1
 5e2:	11 f4       	brne	.+4      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
				{
					SET_BIT(DDRD_R,3);
 5e4:	8b 9a       	sbi	0x11, 3	; 17
 5e6:	4f c0       	rjmp	.+158    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5e8:	81 11       	cpse	r24, r1
 5ea:	4d c0       	rjmp	.+154    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 5ec:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD3:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,3);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5ee:	81 30       	cpi	r24, 0x01	; 1
 5f0:	19 f4       	brne	.+6      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,3);
 5f2:	8b 98       	cbi	0x11, 3	; 17
					SET_BIT(PORTD_R,3);
 5f4:	93 9a       	sbi	0x12, 3	; 18
 5f6:	47 c0       	rjmp	.+142    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 5f8:	81 11       	cpse	r24, r1
 5fa:	45 c0       	rjmp	.+138    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,3);
 5fc:	8b 98       	cbi	0x11, 3	; 17
 5fe:	43 c0       	rjmp	.+134    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 600:	89 81       	ldd	r24, Y+1	; 0x01
 602:	81 30       	cpi	r24, 0x01	; 1
 604:	11 f4       	brne	.+4      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
				{
					SET_BIT(DDRD_R,4);
 606:	8c 9a       	sbi	0x11, 4	; 17
 608:	3e c0       	rjmp	.+124    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 60a:	81 11       	cpse	r24, r1
 60c:	3c c0       	rjmp	.+120    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 60e:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD4:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,4);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 610:	81 30       	cpi	r24, 0x01	; 1
 612:	19 f4       	brne	.+6      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,4);
 614:	8c 98       	cbi	0x11, 4	; 17
					SET_BIT(PORTD_R,4);
 616:	94 9a       	sbi	0x12, 4	; 18
 618:	36 c0       	rjmp	.+108    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 61a:	81 11       	cpse	r24, r1
 61c:	34 c0       	rjmp	.+104    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,4);
 61e:	8c 98       	cbi	0x11, 4	; 17
 620:	32 c0       	rjmp	.+100    	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 622:	89 81       	ldd	r24, Y+1	; 0x01
 624:	81 30       	cpi	r24, 0x01	; 1
 626:	11 f4       	brne	.+4      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
				{
					SET_BIT(DDRD_R,5);
 628:	8d 9a       	sbi	0x11, 5	; 17
 62a:	2d c0       	rjmp	.+90     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 62c:	81 11       	cpse	r24, r1
 62e:	2b c0       	rjmp	.+86     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 630:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD5:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,5);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 632:	81 30       	cpi	r24, 0x01	; 1
 634:	19 f4       	brne	.+6      	; 0x63c <__LOCK_REGION_LENGTH__+0x23c>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,5);
 636:	8d 98       	cbi	0x11, 5	; 17
					SET_BIT(PORTD_R,5);
 638:	95 9a       	sbi	0x12, 5	; 18
 63a:	25 c0       	rjmp	.+74     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 63c:	81 11       	cpse	r24, r1
 63e:	23 c0       	rjmp	.+70     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,5);
 640:	8d 98       	cbi	0x11, 5	; 17
 642:	21 c0       	rjmp	.+66     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 644:	89 81       	ldd	r24, Y+1	; 0x01
 646:	81 30       	cpi	r24, 0x01	; 1
 648:	11 f4       	brne	.+4      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
				{
					SET_BIT(DDRD_R,6);
 64a:	8e 9a       	sbi	0x11, 6	; 17
 64c:	1c c0       	rjmp	.+56     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 64e:	81 11       	cpse	r24, r1
 650:	1a c0       	rjmp	.+52     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 652:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD6:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,6);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 654:	81 30       	cpi	r24, 0x01	; 1
 656:	19 f4       	brne	.+6      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,6);
 658:	8e 98       	cbi	0x11, 6	; 17
					SET_BIT(PORTD_R,6);
 65a:	96 9a       	sbi	0x12, 6	; 18
 65c:	14 c0       	rjmp	.+40     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 65e:	81 11       	cpse	r24, r1
 660:	12 c0       	rjmp	.+36     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,6);
 662:	8e 98       	cbi	0x11, 6	; 17
 664:	10 c0       	rjmp	.+32     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}
				break;
			}
			case PD7:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
 666:	89 81       	ldd	r24, Y+1	; 0x01
 668:	81 30       	cpi	r24, 0x01	; 1
 66a:	11 f4       	brne	.+4      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
				{
					SET_BIT(DDRD_R,7);
 66c:	8f 9a       	sbi	0x11, 7	; 17
 66e:	0b c0       	rjmp	.+22     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 670:	81 11       	cpse	r24, r1
 672:	09 c0       	rjmp	.+18     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
 674:	8a 81       	ldd	r24, Y+2	; 0x02
			case PD7:
			{
				if(astrDIOConfigParameters[i].enuPinDir==OUTPUT)
				{
					SET_BIT(DDRD_R,7);
				}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 676:	81 30       	cpi	r24, 0x01	; 1
 678:	19 f4       	brne	.+6      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
				(astrDIOConfigParameters[i].enuPullupResEn==PULL_UP_ENABLE))
				{
					CLR_BIT(DDRD_R,7);
 67a:	8f 98       	cbi	0x11, 7	; 17
					SET_BIT(PORTD_R,7);
 67c:	97 9a       	sbi	0x12, 7	; 18
 67e:	03 c0       	rjmp	.+6      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			}else if((astrDIOConfigParameters[i].enuPinDir==INPUT)&&
 680:	81 11       	cpse	r24, r1
 682:	01 c0       	rjmp	.+2      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
			(astrDIOConfigParameters[i].enuPullupResEn==NO_CONNECTION))
			{
				CLR_BIT(DDRD_R,7);
 684:	8f 98       	cbi	0x11, 7	; 17
 686:	23 96       	adiw	r28, 0x03	; 3


enuErrorStatus_t DIO_Init(void)
{
	uint8_t i;
	for(i=0;i<DIO_GROUPS_NO;i++)
 688:	c4 17       	cp	r28, r20
 68a:	d5 07       	cpc	r29, r21
 68c:	09 f0       	breq	.+2      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 68e:	db cd       	rjmp	.-1098   	; 0x246 <DIO_Init+0xc>
				break;
			}
		}
	}
	return E_OK;
}
 690:	81 e0       	ldi	r24, 0x01	; 1
 692:	df 91       	pop	r29
 694:	cf 91       	pop	r28
 696:	08 95       	ret

00000698 <DIO_Write>:

enuErrorStatus_t DIO_Write(uint8_t u8GroupId, uint8_t u8Data)
{
		switch(astrDIOConfigParameters[u8GroupId].enuPinNo)
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	fc 01       	movw	r30, r24
 69c:	ee 0f       	add	r30, r30
 69e:	ff 1f       	adc	r31, r31
 6a0:	8e 0f       	add	r24, r30
 6a2:	9f 1f       	adc	r25, r31
 6a4:	fc 01       	movw	r30, r24
 6a6:	e7 55       	subi	r30, 0x57	; 87
 6a8:	ff 4f       	sbci	r31, 0xFF	; 255
 6aa:	e0 81       	ld	r30, Z
 6ac:	8e 2f       	mov	r24, r30
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	80 32       	cpi	r24, 0x20	; 32
 6b2:	91 05       	cpc	r25, r1
 6b4:	08 f0       	brcs	.+2      	; 0x6b8 <DIO_Write+0x20>
 6b6:	c4 c0       	rjmp	.+392    	; 0x840 <DIO_Write+0x1a8>
 6b8:	fc 01       	movw	r30, r24
 6ba:	e6 5b       	subi	r30, 0xB6	; 182
 6bc:	ff 4f       	sbci	r31, 0xFF	; 255
 6be:	0c 94 a9 04 	jmp	0x952	; 0x952 <__tablejump2__>
		{
			case PA0:
			{
				if(u8Data==HIGH)
 6c2:	61 30       	cpi	r22, 0x01	; 1
 6c4:	11 f4       	brne	.+4      	; 0x6ca <DIO_Write+0x32>
				{
					SET_BIT(PORTA_R,PA0);
 6c6:	d8 9a       	sbi	0x1b, 0	; 27
 6c8:	bb c0       	rjmp	.+374    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA0);
 6ca:	d8 98       	cbi	0x1b, 0	; 27
 6cc:	b9 c0       	rjmp	.+370    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PA1:
			{
				if(u8Data==HIGH)
 6ce:	61 30       	cpi	r22, 0x01	; 1
 6d0:	11 f4       	brne	.+4      	; 0x6d6 <DIO_Write+0x3e>
				{
					SET_BIT(PORTA_R,PA1);
 6d2:	d9 9a       	sbi	0x1b, 1	; 27
 6d4:	b5 c0       	rjmp	.+362    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA1);
 6d6:	d9 98       	cbi	0x1b, 1	; 27
 6d8:	b3 c0       	rjmp	.+358    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PA2:
			{
				if(u8Data==HIGH)
 6da:	61 30       	cpi	r22, 0x01	; 1
 6dc:	11 f4       	brne	.+4      	; 0x6e2 <DIO_Write+0x4a>
				{
					SET_BIT(PORTA_R,PA2);
 6de:	da 9a       	sbi	0x1b, 2	; 27
 6e0:	af c0       	rjmp	.+350    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA2);
 6e2:	da 98       	cbi	0x1b, 2	; 27
 6e4:	ad c0       	rjmp	.+346    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PA3:
			{
				if(u8Data==HIGH)
 6e6:	61 30       	cpi	r22, 0x01	; 1
 6e8:	11 f4       	brne	.+4      	; 0x6ee <DIO_Write+0x56>
				{
					SET_BIT(PORTA_R,PA3);
 6ea:	db 9a       	sbi	0x1b, 3	; 27
 6ec:	a9 c0       	rjmp	.+338    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA3);
 6ee:	db 98       	cbi	0x1b, 3	; 27
 6f0:	a7 c0       	rjmp	.+334    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PA4:
			{
				if(u8Data==HIGH)
 6f2:	61 30       	cpi	r22, 0x01	; 1
 6f4:	11 f4       	brne	.+4      	; 0x6fa <DIO_Write+0x62>
				{
					SET_BIT(PORTA_R,PA4);
 6f6:	dc 9a       	sbi	0x1b, 4	; 27
 6f8:	a3 c0       	rjmp	.+326    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA4);
 6fa:	dc 98       	cbi	0x1b, 4	; 27
 6fc:	a1 c0       	rjmp	.+322    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PA5:
			{
				if(u8Data==HIGH)
 6fe:	61 30       	cpi	r22, 0x01	; 1
 700:	11 f4       	brne	.+4      	; 0x706 <DIO_Write+0x6e>
				{
					SET_BIT(PORTA_R,PA5);
 702:	dd 9a       	sbi	0x1b, 5	; 27
 704:	9d c0       	rjmp	.+314    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA5);
 706:	dd 98       	cbi	0x1b, 5	; 27
 708:	9b c0       	rjmp	.+310    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PA6:
			{
				if(u8Data==HIGH)
 70a:	61 30       	cpi	r22, 0x01	; 1
 70c:	11 f4       	brne	.+4      	; 0x712 <DIO_Write+0x7a>
				{
					SET_BIT(PORTA_R,PA6);
 70e:	de 9a       	sbi	0x1b, 6	; 27
 710:	97 c0       	rjmp	.+302    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA6);
 712:	de 98       	cbi	0x1b, 6	; 27
 714:	95 c0       	rjmp	.+298    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PA7:
			{
				if(u8Data==HIGH)
 716:	61 30       	cpi	r22, 0x01	; 1
 718:	11 f4       	brne	.+4      	; 0x71e <DIO_Write+0x86>
				{
					SET_BIT(PORTA_R,PA7);
 71a:	df 9a       	sbi	0x1b, 7	; 27
 71c:	91 c0       	rjmp	.+290    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTA_R,PA7);
 71e:	df 98       	cbi	0x1b, 7	; 27
 720:	8f c0       	rjmp	.+286    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB0:
			{
				if(u8Data==HIGH)
 722:	61 30       	cpi	r22, 0x01	; 1
 724:	11 f4       	brne	.+4      	; 0x72a <DIO_Write+0x92>
				{
					SET_BIT(PORTB_R,0);
 726:	c0 9a       	sbi	0x18, 0	; 24
 728:	8b c0       	rjmp	.+278    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,0);
 72a:	c0 98       	cbi	0x18, 0	; 24
 72c:	89 c0       	rjmp	.+274    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB1:
			{
				if(u8Data==HIGH)
 72e:	61 30       	cpi	r22, 0x01	; 1
 730:	11 f4       	brne	.+4      	; 0x736 <DIO_Write+0x9e>
				{
					SET_BIT(PORTB_R,1);
 732:	c1 9a       	sbi	0x18, 1	; 24
 734:	85 c0       	rjmp	.+266    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,1);
 736:	c1 98       	cbi	0x18, 1	; 24
 738:	83 c0       	rjmp	.+262    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB2:
			{
				if(u8Data==HIGH)
 73a:	61 30       	cpi	r22, 0x01	; 1
 73c:	11 f4       	brne	.+4      	; 0x742 <DIO_Write+0xaa>
				{
					SET_BIT(PORTB_R,2);
 73e:	c2 9a       	sbi	0x18, 2	; 24
 740:	7f c0       	rjmp	.+254    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,2);
 742:	c2 98       	cbi	0x18, 2	; 24
 744:	7d c0       	rjmp	.+250    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB3:
			{
				if(u8Data==HIGH)
 746:	61 30       	cpi	r22, 0x01	; 1
 748:	11 f4       	brne	.+4      	; 0x74e <DIO_Write+0xb6>
				{
					SET_BIT(PORTB_R,3);
 74a:	c3 9a       	sbi	0x18, 3	; 24
 74c:	79 c0       	rjmp	.+242    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,3);
 74e:	c3 98       	cbi	0x18, 3	; 24
 750:	77 c0       	rjmp	.+238    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB4:
			{
				if(u8Data==HIGH)
 752:	61 30       	cpi	r22, 0x01	; 1
 754:	11 f4       	brne	.+4      	; 0x75a <DIO_Write+0xc2>
				{
					SET_BIT(PORTB_R,4);
 756:	c4 9a       	sbi	0x18, 4	; 24
 758:	73 c0       	rjmp	.+230    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,4);
 75a:	c4 98       	cbi	0x18, 4	; 24
 75c:	71 c0       	rjmp	.+226    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB5:
			{
				if(u8Data==HIGH)
 75e:	61 30       	cpi	r22, 0x01	; 1
 760:	11 f4       	brne	.+4      	; 0x766 <DIO_Write+0xce>
				{
					SET_BIT(PORTB_R,5);
 762:	c5 9a       	sbi	0x18, 5	; 24
 764:	6d c0       	rjmp	.+218    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,5);
 766:	c5 98       	cbi	0x18, 5	; 24
 768:	6b c0       	rjmp	.+214    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB6:
			{
				if(u8Data==HIGH)
 76a:	61 30       	cpi	r22, 0x01	; 1
 76c:	11 f4       	brne	.+4      	; 0x772 <DIO_Write+0xda>
				{
					SET_BIT(PORTB_R,6);
 76e:	c6 9a       	sbi	0x18, 6	; 24
 770:	67 c0       	rjmp	.+206    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,6);
 772:	c6 98       	cbi	0x18, 6	; 24
 774:	65 c0       	rjmp	.+202    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PB7:
			{
				if(u8Data==HIGH)
 776:	61 30       	cpi	r22, 0x01	; 1
 778:	11 f4       	brne	.+4      	; 0x77e <DIO_Write+0xe6>
				{
					SET_BIT(PORTB_R,7);
 77a:	c7 9a       	sbi	0x18, 7	; 24
 77c:	61 c0       	rjmp	.+194    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTB_R,7);
 77e:	c7 98       	cbi	0x18, 7	; 24
 780:	5f c0       	rjmp	.+190    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC0:
			{
				if(u8Data==HIGH)
 782:	61 30       	cpi	r22, 0x01	; 1
 784:	11 f4       	brne	.+4      	; 0x78a <DIO_Write+0xf2>
				{
					SET_BIT(PORTC_R,0);
 786:	a8 9a       	sbi	0x15, 0	; 21
 788:	5b c0       	rjmp	.+182    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,0);
 78a:	a8 98       	cbi	0x15, 0	; 21
 78c:	59 c0       	rjmp	.+178    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC1:
			{
				if(u8Data==HIGH)
 78e:	61 30       	cpi	r22, 0x01	; 1
 790:	11 f4       	brne	.+4      	; 0x796 <DIO_Write+0xfe>
				{
					SET_BIT(PORTC_R,1);
 792:	a9 9a       	sbi	0x15, 1	; 21
 794:	55 c0       	rjmp	.+170    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,1);
 796:	a9 98       	cbi	0x15, 1	; 21
 798:	53 c0       	rjmp	.+166    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC2:
			{
				if(u8Data==HIGH)
 79a:	61 30       	cpi	r22, 0x01	; 1
 79c:	11 f4       	brne	.+4      	; 0x7a2 <DIO_Write+0x10a>
				{
					SET_BIT(PORTC_R,2);
 79e:	aa 9a       	sbi	0x15, 2	; 21
 7a0:	4f c0       	rjmp	.+158    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,2);
 7a2:	aa 98       	cbi	0x15, 2	; 21
 7a4:	4d c0       	rjmp	.+154    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC3:
			{
				if(u8Data==HIGH)
 7a6:	61 30       	cpi	r22, 0x01	; 1
 7a8:	11 f4       	brne	.+4      	; 0x7ae <DIO_Write+0x116>
				{
					SET_BIT(PORTC_R,3);
 7aa:	ab 9a       	sbi	0x15, 3	; 21
 7ac:	49 c0       	rjmp	.+146    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,3);
 7ae:	ab 98       	cbi	0x15, 3	; 21
 7b0:	47 c0       	rjmp	.+142    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC4:
			{
				if(u8Data==HIGH)
 7b2:	61 30       	cpi	r22, 0x01	; 1
 7b4:	11 f4       	brne	.+4      	; 0x7ba <DIO_Write+0x122>
				{
					SET_BIT(PORTC_R,4);
 7b6:	ac 9a       	sbi	0x15, 4	; 21
 7b8:	43 c0       	rjmp	.+134    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,4);
 7ba:	ac 98       	cbi	0x15, 4	; 21
 7bc:	41 c0       	rjmp	.+130    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC5:
			{
				if(u8Data==HIGH)
 7be:	61 30       	cpi	r22, 0x01	; 1
 7c0:	11 f4       	brne	.+4      	; 0x7c6 <DIO_Write+0x12e>
				{
					SET_BIT(PORTC_R,5);
 7c2:	ad 9a       	sbi	0x15, 5	; 21
 7c4:	3d c0       	rjmp	.+122    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,5);
 7c6:	ad 98       	cbi	0x15, 5	; 21
 7c8:	3b c0       	rjmp	.+118    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC6:
			{
				if(u8Data==HIGH)
 7ca:	61 30       	cpi	r22, 0x01	; 1
 7cc:	11 f4       	brne	.+4      	; 0x7d2 <DIO_Write+0x13a>
				{
					SET_BIT(PORTC_R,6);
 7ce:	ae 9a       	sbi	0x15, 6	; 21
 7d0:	37 c0       	rjmp	.+110    	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,6);
 7d2:	ae 98       	cbi	0x15, 6	; 21
 7d4:	35 c0       	rjmp	.+106    	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PC7:
			{
				if(u8Data==HIGH)
 7d6:	61 30       	cpi	r22, 0x01	; 1
 7d8:	11 f4       	brne	.+4      	; 0x7de <DIO_Write+0x146>
				{
					SET_BIT(PORTC_R,7);
 7da:	af 9a       	sbi	0x15, 7	; 21
 7dc:	31 c0       	rjmp	.+98     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTC_R,7);
 7de:	af 98       	cbi	0x15, 7	; 21
 7e0:	2f c0       	rjmp	.+94     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD0:
			{
				if(u8Data==HIGH)
 7e2:	61 30       	cpi	r22, 0x01	; 1
 7e4:	11 f4       	brne	.+4      	; 0x7ea <DIO_Write+0x152>
				{
					SET_BIT(PORTD_R,0);
 7e6:	90 9a       	sbi	0x12, 0	; 18
 7e8:	2b c0       	rjmp	.+86     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,0);
 7ea:	90 98       	cbi	0x12, 0	; 18
 7ec:	29 c0       	rjmp	.+82     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD1:
			{
				if(u8Data==HIGH)
 7ee:	61 30       	cpi	r22, 0x01	; 1
 7f0:	11 f4       	brne	.+4      	; 0x7f6 <DIO_Write+0x15e>
				{
					SET_BIT(PORTD_R,1);
 7f2:	91 9a       	sbi	0x12, 1	; 18
 7f4:	25 c0       	rjmp	.+74     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,1);
 7f6:	91 98       	cbi	0x12, 1	; 18
 7f8:	23 c0       	rjmp	.+70     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD2:
			{
				if(u8Data==HIGH)
 7fa:	61 30       	cpi	r22, 0x01	; 1
 7fc:	11 f4       	brne	.+4      	; 0x802 <DIO_Write+0x16a>
				{
					SET_BIT(PORTD_R,2);
 7fe:	92 9a       	sbi	0x12, 2	; 18
 800:	1f c0       	rjmp	.+62     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,2);
 802:	92 98       	cbi	0x12, 2	; 18
 804:	1d c0       	rjmp	.+58     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD3:
			{
				if(u8Data==HIGH)
 806:	61 30       	cpi	r22, 0x01	; 1
 808:	11 f4       	brne	.+4      	; 0x80e <DIO_Write+0x176>
				{
					SET_BIT(PORTD_R,3);
 80a:	93 9a       	sbi	0x12, 3	; 18
 80c:	19 c0       	rjmp	.+50     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,3);
 80e:	93 98       	cbi	0x12, 3	; 18
 810:	17 c0       	rjmp	.+46     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD4:
			{
				if(u8Data==HIGH)
 812:	61 30       	cpi	r22, 0x01	; 1
 814:	11 f4       	brne	.+4      	; 0x81a <DIO_Write+0x182>
				{
					SET_BIT(PORTD_R,4);
 816:	94 9a       	sbi	0x12, 4	; 18
 818:	13 c0       	rjmp	.+38     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,4);
 81a:	94 98       	cbi	0x12, 4	; 18
 81c:	11 c0       	rjmp	.+34     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD5:
			{
				if(u8Data==HIGH)
 81e:	61 30       	cpi	r22, 0x01	; 1
 820:	11 f4       	brne	.+4      	; 0x826 <DIO_Write+0x18e>
				{
					SET_BIT(PORTD_R,5);
 822:	95 9a       	sbi	0x12, 5	; 18
 824:	0d c0       	rjmp	.+26     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,5);
 826:	95 98       	cbi	0x12, 5	; 18
 828:	0b c0       	rjmp	.+22     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD6:
			{
				if(u8Data==HIGH)
 82a:	61 30       	cpi	r22, 0x01	; 1
 82c:	11 f4       	brne	.+4      	; 0x832 <DIO_Write+0x19a>
				{
					SET_BIT(PORTD_R,6);
 82e:	96 9a       	sbi	0x12, 6	; 18
 830:	07 c0       	rjmp	.+14     	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,6);
 832:	96 98       	cbi	0x12, 6	; 18
 834:	05 c0       	rjmp	.+10     	; 0x840 <DIO_Write+0x1a8>
				}
				break;
			}
			case PD7:
			{
				if(u8Data==HIGH)
 836:	61 30       	cpi	r22, 0x01	; 1
 838:	11 f4       	brne	.+4      	; 0x83e <DIO_Write+0x1a6>
				{
					SET_BIT(PORTD_R,7);
 83a:	97 9a       	sbi	0x12, 7	; 18
 83c:	01 c0       	rjmp	.+2      	; 0x840 <DIO_Write+0x1a8>
				}else
				{
					CLR_BIT(PORTD_R,7);
 83e:	97 98       	cbi	0x12, 7	; 18
				}
				break;
			}
		}
	return E_OK;
}
 840:	81 e0       	ldi	r24, 0x01	; 1
 842:	08 95       	ret

00000844 <UART_Init>:
	if(GET_BIT(UCSRA_R,RXC_B))
	{
		*pu16Data=UDR_R;
	}
	return gError;
}
 844:	10 bc       	out	0x20, r1	; 32
 846:	83 e3       	ldi	r24, 0x33	; 51
 848:	89 b9       	out	0x09, r24	; 9
 84a:	88 e1       	ldi	r24, 0x18	; 24
 84c:	8a b9       	out	0x0a, r24	; 10
 84e:	80 b5       	in	r24, 0x20	; 32
 850:	84 60       	ori	r24, 0x04	; 4
 852:	80 bd       	out	0x20, r24	; 32
 854:	80 b5       	in	r24, 0x20	; 32
 856:	82 60       	ori	r24, 0x02	; 2
 858:	80 bd       	out	0x20, r24	; 32
 85a:	80 b5       	in	r24, 0x20	; 32
 85c:	8f 7d       	andi	r24, 0xDF	; 223
 85e:	80 bd       	out	0x20, r24	; 32
 860:	80 b5       	in	r24, 0x20	; 32
 862:	8f 7e       	andi	r24, 0xEF	; 239
 864:	80 bd       	out	0x20, r24	; 32
 866:	80 b5       	in	r24, 0x20	; 32
 868:	87 7f       	andi	r24, 0xF7	; 247
 86a:	80 bd       	out	0x20, r24	; 32
 86c:	81 e0       	ldi	r24, 0x01	; 1
 86e:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__data_end>
 872:	08 95       	ret

00000874 <UART_SendData>:
 874:	98 2f       	mov	r25, r24
 876:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
 87a:	88 23       	and	r24, r24
 87c:	41 f0       	breq	.+16     	; 0x88e <UART_SendData+0x1a>
 87e:	81 e0       	ldi	r24, 0x01	; 1
 880:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__data_end>
 884:	5d 9b       	sbis	0x0b, 5	; 11
 886:	fe cf       	rjmp	.-4      	; 0x884 <UART_SendData+0x10>
 888:	9c b9       	out	0x0c, r25	; 12
 88a:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
 88e:	08 95       	ret

00000890 <UART_ReceiveData>:
 890:	fc 01       	movw	r30, r24
 892:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
 896:	88 23       	and	r24, r24
 898:	59 f0       	breq	.+22     	; 0x8b0 <UART_ReceiveData+0x20>
 89a:	81 e0       	ldi	r24, 0x01	; 1
 89c:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__data_end>
 8a0:	5f 9b       	sbis	0x0b, 7	; 11
 8a2:	fe cf       	rjmp	.-4      	; 0x8a0 <UART_ReceiveData+0x10>
 8a4:	2c b1       	in	r18, 0x0c	; 12
 8a6:	30 e0       	ldi	r19, 0x00	; 0
 8a8:	31 83       	std	Z+1, r19	; 0x01
 8aa:	20 83       	st	Z, r18
 8ac:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
 8b0:	08 95       	ret

000008b2 <UART_SendString>:
* Parameters (out): None
* Return Value    : enuErrorStatus_t - For error handling 
* Description     : Sending a string with UART
*************************************************************/
enuErrorStatus_t UART_SendString(uint8_t* pu8String)
{
 8b2:	ef 92       	push	r14
 8b4:	ff 92       	push	r15
 8b6:	0f 93       	push	r16
 8b8:	1f 93       	push	r17
 8ba:	cf 93       	push	r28
 8bc:	df 93       	push	r29
 8be:	7c 01       	movw	r14, r24
	if(gError==E_ERROR)
 8c0:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
 8c4:	88 23       	and	r24, r24
 8c6:	a9 f0       	breq	.+42     	; 0x8f2 <UART_SendString+0x40>
	{
		return E_ERROR;
	}
	gError=E_OK;
 8c8:	81 e0       	ldi	r24, 0x01	; 1
 8ca:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__data_end>
 8ce:	e7 01       	movw	r28, r14
 8d0:	8f ef       	ldi	r24, 0xFF	; 255
 8d2:	e8 0e       	add	r14, r24
 8d4:	f1 1c       	adc	r15, r1
 8d6:	8e 01       	movw	r16, r28
	uint8_t i=0;
	for(i=0;i<MAX_LEN;i++)
	{
		UART_SendData(pu8String[i]);
 8d8:	89 91       	ld	r24, Y+
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	0e 94 3a 04 	call	0x874	; 0x874 <UART_SendData>
		if(pu8String[i]=='\r')
 8e0:	f8 01       	movw	r30, r16
 8e2:	90 81       	ld	r25, Z
 8e4:	9d 30       	cpi	r25, 0x0D	; 13
 8e6:	19 f0       	breq	.+6      	; 0x8ee <UART_SendString+0x3c>
	{
		return E_ERROR;
	}
	gError=E_OK;
	uint8_t i=0;
	for(i=0;i<MAX_LEN;i++)
 8e8:	ce 15       	cp	r28, r14
 8ea:	df 05       	cpc	r29, r15
 8ec:	a1 f7       	brne	.-24     	; 0x8d6 <UART_SendString+0x24>
		if(pu8String[i]=='\r')
		{
			break;
		}		
	}
	return gError;
 8ee:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
}
 8f2:	df 91       	pop	r29
 8f4:	cf 91       	pop	r28
 8f6:	1f 91       	pop	r17
 8f8:	0f 91       	pop	r16
 8fa:	ff 90       	pop	r15
 8fc:	ef 90       	pop	r14
 8fe:	08 95       	ret

00000900 <UART_ReceiveString>:
* Parameters (out): pu8String
* Return Value    : enuErrorStatus_t - For error handling 
* Description     : Sending a string with UART
*************************************************************/
enuErrorStatus_t UART_ReceiveString(uint8_t* pu8String,uint8_t max_length)
{
 900:	0f 93       	push	r16
 902:	1f 93       	push	r17
 904:	cf 93       	push	r28
 906:	df 93       	push	r29
 908:	8c 01       	movw	r16, r24
	if(gError==E_ERROR)
 90a:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
 90e:	88 23       	and	r24, r24
 910:	d9 f0       	breq	.+54     	; 0x948 <UART_ReceiveString+0x48>
	{
		return E_ERROR;
	}
	gError=E_OK;
 912:	81 e0       	ldi	r24, 0x01	; 1
 914:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__data_end>
	uint8_t i=0;
	for(i=0;i<max_length;i++)
 918:	66 23       	and	r22, r22
 91a:	a1 f0       	breq	.+40     	; 0x944 <UART_ReceiveString+0x44>
 91c:	c8 01       	movw	r24, r16
 91e:	e8 01       	movw	r28, r16
 920:	61 50       	subi	r22, 0x01	; 1
 922:	06 2f       	mov	r16, r22
 924:	10 e0       	ldi	r17, 0x00	; 0
 926:	0f 5f       	subi	r16, 0xFF	; 255
 928:	1f 4f       	sbci	r17, 0xFF	; 255
 92a:	08 0f       	add	r16, r24
 92c:	19 1f       	adc	r17, r25
	{
		UART_ReceiveData(&pu8String[i]);
 92e:	ce 01       	movw	r24, r28
 930:	0e 94 48 04 	call	0x890	; 0x890 <UART_ReceiveData>
		if((pu8String[i]=='\r')||(pu8String[i]=='\n'))
 934:	99 91       	ld	r25, Y+
 936:	9d 30       	cpi	r25, 0x0D	; 13
 938:	29 f0       	breq	.+10     	; 0x944 <UART_ReceiveString+0x44>
 93a:	9a 30       	cpi	r25, 0x0A	; 10
 93c:	19 f0       	breq	.+6      	; 0x944 <UART_ReceiveString+0x44>
	{
		return E_ERROR;
	}
	gError=E_OK;
	uint8_t i=0;
	for(i=0;i<max_length;i++)
 93e:	c0 17       	cp	r28, r16
 940:	d1 07       	cpc	r29, r17
 942:	a9 f7       	brne	.-22     	; 0x92e <UART_ReceiveString+0x2e>
		/*if(pu8String[6]=='\r')
		{
			DIO_Write(4,HIGH);
		}*/

	return gError;
 944:	80 91 b2 00 	lds	r24, 0x00B2	; 0x8000b2 <__data_end>
}
 948:	df 91       	pop	r29
 94a:	cf 91       	pop	r28
 94c:	1f 91       	pop	r17
 94e:	0f 91       	pop	r16
 950:	08 95       	ret

00000952 <__tablejump2__>:
 952:	ee 0f       	add	r30, r30
 954:	ff 1f       	adc	r31, r31
 956:	05 90       	lpm	r0, Z+
 958:	f4 91       	lpm	r31, Z
 95a:	e0 2d       	mov	r30, r0
 95c:	09 94       	ijmp

0000095e <strcmp>:
 95e:	fb 01       	movw	r30, r22
 960:	dc 01       	movw	r26, r24
 962:	8d 91       	ld	r24, X+
 964:	01 90       	ld	r0, Z+
 966:	80 19       	sub	r24, r0
 968:	01 10       	cpse	r0, r1
 96a:	d9 f3       	breq	.-10     	; 0x962 <strcmp+0x4>
 96c:	99 0b       	sbc	r25, r25
 96e:	08 95       	ret

00000970 <_exit>:
 970:	f8 94       	cli

00000972 <__stop_program>:
 972:	ff cf       	rjmp	.-2      	; 0x972 <__stop_program>
